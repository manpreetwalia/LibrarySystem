package library.entities;
import static org.junit.Assert.*;
import java.util.*;
import java.util.Date;

import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;

import static org.junit.Assert.*;

import library.interfaces.entities.ELoanState;
import library.interfaces.entities.IBook;
import library.interfaces.entities.IMember;

public class LoanTest {
@ author ManpreetKAur
	@BeforeClass
	public static void setUpBeforeClass() throws Exception
	{
		Book b1 = new Book("Manpreet", "Welcome to junitTesting", "123456", 9999);
		Member m1 = new Member("Manpreet", "Walia", "123456", "manpreetwalia.2008@rediffmail.com", 1234);
	    Date d1 = (new GregorianCalendar(2016, 9, 15)).getTime();
	// Date d2 = new Date(2016, 10, 15);
	}

	@AfterClass
	public static void tearDownAfterClass() throws Exception {
	}

	@Before
	public void setUp() throws Exception {
	}

	@After
	public void tearDown() throws Exception {
	}

	@Test
	public void testTestLoan() {
		fail("Not yet implemented");
	}

	@Test
	public void testTestCommit() {
		fail("Not yet implemented");
	}

	@Test
	public void testTestComplete() {
		fail("Not yet implemented");
	}

	@Test
	public void testTestIsOverDue() {
		fail("Not yet implemented");
	}

	@Test
	public void testTestCheckOverDue() {
		fail("Not yet implemented");
	}

	@Test
	public void testTestGetBorrower() {
		fail("Not yet implemented");
	}

	@Test
	public void testTestGetBook() {
		fail("Not yet implemented");
	}

	@Test
	public void testTestGetID() {
		fail("Not yet implemented");
	}

	@Test
	public void testTestGetState() {
		fail("Not yet implemented");
	}

	@Test
	public void testTestToString() {
		fail("Not yet implemented");
	}

	@Test
	public void testTestObject() {
		fail("Not yet implemented");
	}

	@Test
	public void testTestGetClass() {
		fail("Not yet implemented");
	}

	@Test
	public void testTestHashCode() {
		fail("Not yet implemented");
	}

	@Test
	public void testTestEquals() {
		fail("Not yet implemented");
	}

	@Test
	public void testTestClone() {
		fail("Not yet implemented");
	}

	@Test
	public void testTestToString1() {
		fail("Not yet implemented");
	}

	@Test
	public void testTestNotify() {
		fail("Not yet implemented");
	}

	@Test
	public void testTestNotifyAll() {
		fail("Not yet implemented");
	}

	@Test
	public void testTestWaitLong() {
		fail("Not yet implemented");
	}

	@Test
	public void testTestWaitLongInt() {
		fail("Not yet implemented");
	}

	@Test
	public void testTestWait() {
		fail("Not yet implemented");
	}

	@Test
	public void testTestFinalize() {
		fail("Not yet implemented");
	}

	@Test
	public void testObject() {
		fail("Not yet implemented");
	}

	@Test
	public void testGetClass() {
		fail("Not yet implemented");
	}

	@Test
	public void testHashCode() {
		fail("Not yet implemented");
	}

	@Test
	public void testEquals() {
		fail("Not yet implemented");
	}

	@Test
	public void testClone() {
		fail("Not yet implemented");
	}

	@Test
	public void testToString() {
		fail("Not yet implemented");
	}

	@Test
	public void testNotify() {
		fail("Not yet implemented");
	}

	@Test
	public void testNotifyAll() {
		fail("Not yet implemented");
	}

	@Test
	public void testWaitLong() {
		fail("Not yet implemented");
	}

	@Test
	public void testWaitLongInt() {
		fail("Not yet implemented");
	}

	@Test
	public void testWait() {
		fail("Not yet implemented");
	}

	@Test
	public void testFinalize() {
		fail("Not yet implemented");
	}

}
